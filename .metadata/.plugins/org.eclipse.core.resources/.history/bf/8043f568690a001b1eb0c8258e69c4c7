package david.augusto.luan.modelo;

import java.util.ArrayList;
import java.util.List;

public class Campo {
	private final int linha;
	private final int coluna;

	private boolean aberto = false;
	private boolean minado = false;
	private boolean marcado = false;

	private List<Campo> vizinhos;

	public Campo(int linha, int coluna) {
		this.linha = linha;
		this.coluna = coluna;
		this.vizinhos = new ArrayList<Campo>();
	}

	public boolean adicionarVizinho(Campo vizinho) {
		boolean linhaDiferente = linha != vizinho.linha;
		boolean colunaDiferente = coluna != vizinho.coluna;
		boolean diagonal = linhaDiferente && colunaDiferente;

		int deltaLinha = Math.abs(linha - vizinho.linha);
		int deltaColuna = Math.abs(coluna - vizinho.coluna);
		int deltaGeral = deltaLinha + deltaColuna;

		if (deltaGeral == 1 && !diagonal) {
			return true;
		} else if (deltaGeral == 2 && diagonal) {
			return true;
		}
		return false;
	}

	void alternarMarcacao() {
		if (!aberto) {
			// se tiver marcado ele vai negar
			marcado = !marcado;
		}
	}

	boolean abrir() {
		// se o campo nao estiver aberto nem marcado ent pode aplicar
		// a logica para abrir o campo
		if (!aberto && !marcado) {
			aberto = true;
			
			// se ele entrar nesse campo significa q o jogo vai acabar
			if(minado) {
				
			}
				
		}
		return false;
	}
}
